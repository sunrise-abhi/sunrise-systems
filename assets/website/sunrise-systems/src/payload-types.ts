/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    pages: Page;
    posts: Post;
    services: Service;
    'case-studies': CaseStudy;
    media: Media;
    categories: Category;
    users: User;
    redirects: Redirect;
    forms: Form;
    'form-submissions': FormSubmission;
    search: Search;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    pages: PagesSelect<false> | PagesSelect<true>;
    posts: PostsSelect<false> | PostsSelect<true>;
    services: ServicesSelect<false> | ServicesSelect<true>;
    'case-studies': CaseStudiesSelect<false> | CaseStudiesSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    categories: CategoriesSelect<false> | CategoriesSelect<true>;
    users: UsersSelect<false> | UsersSelect<true>;
    redirects: RedirectsSelect<false> | RedirectsSelect<true>;
    forms: FormsSelect<false> | FormsSelect<true>;
    'form-submissions': FormSubmissionsSelect<false> | FormSubmissionsSelect<true>;
    search: SearchSelect<false> | SearchSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: string;
  };
  globals: {
    header: Header;
    footer: Footer;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: string;
  title: string;
  hero: {
    type: 'none' | 'highImpact' | 'mediumImpact' | 'lowImpact';
    richText?: {
      root: {
        type: string;
        children: {
          type: any;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    links?:
      | {
          link: {
            type?: ('reference' | 'custom') | null;
            newTab?: boolean | null;
            reference?:
              | ({
                  relationTo: 'pages';
                  value: string | Page;
                } | null)
              | ({
                  relationTo: 'posts';
                  value: string | Post;
                } | null);
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'primary' | 'outline') | null;
          };
          id?: string | null;
        }[]
      | null;
    media?: (string | null) | Media;
  };
  layout: (
    | HeroBlock
    | StatsRowBlock
    | TestimonialBlock
    | StatementBlock
    | FeatureGridBlock
    | ProcessBlock
    | LogoStripBlock
    | CaseStudySummaryBlock
    | CaseStudyPreviewBlock
    | CaseStudyCarouselBlock
    | ServiceSummaryBlock
    | ServicesCollectionBlock
    | GalleryBlock
    | ImageBlock
    | SplitBlock
    | CarouselBlock
    | CallToActionBlock
    | ContentBlock
    | MediaBlock
    | ArchiveBlock
    | FormBlock
    | CalendlyBlock
  )[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  /**
   * When enabled, the slug will auto-generate from the title field on save and autosave.
   */
  generateSlug?: boolean | null;
  slug: string;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts".
 */
export interface Post {
  id: string;
  title: string;
  heroImage?: (string | null) | Media;
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  relatedPosts?: (string | Post)[] | null;
  categories?: (string | Category)[] | null;
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  authors?: (string | User)[] | null;
  populatedAuthors?:
    | {
        id?: string | null;
        name?: string | null;
      }[]
    | null;
  /**
   * When enabled, the slug will auto-generate from the title field on save and autosave.
   */
  generateSlug?: boolean | null;
  slug: string;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: string;
  alt?: string | null;
  caption?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
  sizes?: {
    thumbnail?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    square?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    small?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    medium?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    large?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    xlarge?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
    og?: {
      url?: string | null;
      width?: number | null;
      height?: number | null;
      mimeType?: string | null;
      filesize?: number | null;
      filename?: string | null;
    };
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories".
 */
export interface Category {
  id: string;
  title: string;
  /**
   * When enabled, the slug will auto-generate from the title field on save and autosave.
   */
  generateSlug?: boolean | null;
  slug: string;
  parent?: (string | null) | Category;
  breadcrumbs?:
    | {
        doc?: (string | null) | Category;
        url?: string | null;
        label?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: string;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  sessions?:
    | {
        id: string;
        createdAt?: string | null;
        expiresAt: string;
      }[]
    | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroBlock".
 */
export interface HeroBlock {
  variant: 'default' | 'imageRight' | 'backgroundImage' | 'caseStudyHero';
  /**
   * Small text above headline (optional)
   */
  eyebrow?: string | null;
  headline: string;
  subheadline?: string | null;
  ctaButton?: {
    label?: string | null;
    url?: string | null;
  };
  /**
   * e.g., "0% commission on projects you win"
   */
  proofBadge?: string | null;
  /**
   * Image displayed on the right side
   */
  image?: (string | null) | Media;
  /**
   * Full-width background image
   */
  backgroundImage?: (string | null) | Media;
  /**
   * Large full-width image displayed below headline and subhead
   */
  heroImage?: (string | null) | Media;
  /**
   * Services to display as tags in the hero
   */
  services?: (string | Service)[] | null;
  /**
   * Dark overlay opacity (0-100)
   */
  overlayOpacity?: number | null;
  /**
   * Background image position
   */
  objectPosition?: ('center' | 'top' | 'bottom' | 'left' | 'right') | null;
  backgroundColor?: ('white' | 'offwhite') | null;
  /**
   * Top padding of the section
   */
  paddingTop?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  /**
   * Bottom padding of the section
   */
  paddingBottom?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'heroBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services".
 */
export interface Service {
  id: string;
  title: string;
  category: 'sales' | 'marketing' | 'software';
  /**
   * Short description for service cards/listings
   */
  excerpt: string;
  /**
   * Icon identifier or emoji
   */
  icon?: string | null;
  featuredMetrics?:
    | {
        label?: string | null;
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  /**
   * Optional benefit bullet points for service cards
   */
  benefits?:
    | {
        text: string;
        id?: string | null;
      }[]
    | null;
  content: (
    | HeroBlock
    | StatementBlock
    | StatsRowBlock
    | TestimonialBlock
    | FeatureGridBlock
    | ProcessBlock
    | LogoStripBlock
    | CaseStudySummaryBlock
    | CaseStudyPreviewBlock
    | CaseStudyCarouselBlock
    | ServiceSummaryBlock
    | ServicesCollectionBlock
    | GalleryBlock
    | ImageBlock
    | SplitBlock
    | CarouselBlock
    | CallToActionBlock
    | ContentBlock
    | MediaBlock
    | ArchiveBlock
    | FormBlock
    | CalendlyBlock
  )[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  /**
   * When enabled, the slug will auto-generate from the title field on save and autosave.
   */
  generateSlug?: boolean | null;
  slug: string;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StatementBlock".
 */
export interface StatementBlock {
  headline: string;
  content?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  alignment?: ('left' | 'center' | 'right') | null;
  ctaButton?: {
    label?: string | null;
    url?: string | null;
  };
  backgroundColor?: ('white' | 'offwhite') | null;
  /**
   * Top padding of the section
   */
  paddingTop?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  /**
   * Bottom padding of the section
   */
  paddingBottom?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'statementBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StatsRowBlock".
 */
export interface StatsRowBlock {
  stats?:
    | {
        /**
         * e.g., "$29MM+" or "865:1"
         */
        value: string;
        /**
         * e.g., "total pipeline generated"
         */
        label: string;
        id?: string | null;
      }[]
    | null;
  backgroundColor?: ('white' | 'offwhite') | null;
  /**
   * Top padding of the section
   */
  paddingTop?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  /**
   * Bottom padding of the section
   */
  paddingBottom?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'statsRowBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialBlock".
 */
export interface TestimonialBlock {
  quote: string;
  authorName: string;
  authorTitle: string;
  companyName?: string | null;
  authorImage?: (string | null) | Media;
  position?: ('center' | 'left' | 'right') | null;
  backgroundColor?: ('white' | 'offwhite') | null;
  /**
   * Top padding of the section
   */
  paddingTop?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  /**
   * Bottom padding of the section
   */
  paddingBottom?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'testimonialBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureGridBlock".
 */
export interface FeatureGridBlock {
  headline?: string | null;
  /**
   * Optional subheadline below the headline
   */
  subhead?: string | null;
  features?:
    | {
        /**
         * Optional image displayed above the title
         */
        image?: (string | null) | Media;
        title: string;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  columns?: ('2' | '3' | '4') | null;
  backgroundColor?: ('white' | 'offwhite') | null;
  /**
   * Top padding of the section
   */
  paddingTop?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  /**
   * Bottom padding of the section
   */
  paddingBottom?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'featureGridBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProcessBlock".
 */
export interface ProcessBlock {
  headline?: string | null;
  /**
   * Optional subheadline below the headline
   */
  subhead?: string | null;
  steps?:
    | {
        /**
         * e.g., "1" or "01"
         */
        number?: string | null;
        title: string;
        description?: string | null;
        id?: string | null;
      }[]
    | null;
  backgroundColor?: ('white' | 'offwhite') | null;
  /**
   * Top padding of the section
   */
  paddingTop?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  /**
   * Bottom padding of the section
   */
  paddingBottom?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'processBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LogoStripBlock".
 */
export interface LogoStripBlock {
  headline?: string | null;
  logos?:
    | {
        image: string | Media;
        altText: string;
        id?: string | null;
      }[]
    | null;
  backgroundColor?: ('white' | 'offwhite') | null;
  /**
   * Top padding of the section
   */
  paddingTop?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  /**
   * Bottom padding of the section
   */
  paddingBottom?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'logoStripBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CaseStudySummaryBlock".
 */
export interface CaseStudySummaryBlock {
  caseStudy: string | CaseStudy;
  /**
   * Select which metrics to highlight
   */
  displayMetrics?:
    | {
        label?: string | null;
        value?: string | null;
        id?: string | null;
      }[]
    | null;
  backgroundColor?: ('white' | 'offwhite') | null;
  /**
   * Top padding of the section
   */
  paddingTop?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  /**
   * Bottom padding of the section
   */
  paddingBottom?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'caseStudySummaryBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "case-studies".
 */
export interface CaseStudy {
  id: string;
  clientName: string;
  /**
   * Primary headline for case study previews
   */
  headline: string;
  /**
   * Subheadline displayed under the headline in case study previews
   */
  subheadline?: string | null;
  industry: 'design-build-gc' | 'specialty-contractor' | 'distributor';
  campaignDuration: string;
  investment: number;
  keyMetrics: {
    pipelineValue: number;
    closedRevenue?: number | null;
    pipelineROI?: number | null;
    realizedROI?: number | null;
    relationships?: number | null;
    bidRequests?: number | null;
    bidLists?: number | null;
    repeatClients?: number | null;
  };
  testimonial: {
    quote: string;
    authorName: string;
    authorTitle: string;
    authorImage?: (string | null) | Media;
    /**
     * Client logo
     */
    logo?: (string | null) | Media;
  };
  /**
   * Services associated with this case study
   */
  services?: (string | Service)[] | null;
  content: (
    | HeroBlock
    | StatementBlock
    | StatsRowBlock
    | TestimonialBlock
    | FeatureGridBlock
    | ProcessBlock
    | LogoStripBlock
    | CaseStudySummaryBlock
    | CaseStudyPreviewBlock
    | CaseStudyCarouselBlock
    | ServiceSummaryBlock
    | ServicesCollectionBlock
    | GalleryBlock
    | ImageBlock
    | SplitBlock
    | CarouselBlock
    | CallToActionBlock
    | ContentBlock
    | MediaBlock
    | ArchiveBlock
    | FormBlock
    | CalendlyBlock
  )[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (string | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  /**
   * When enabled, the slug will auto-generate from the title field on save and autosave.
   */
  generateSlug?: boolean | null;
  slug: string;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CaseStudyPreviewBlock".
 */
export interface CaseStudyPreviewBlock {
  /**
   * Section headline
   */
  headline?: string | null;
  /**
   * Section subhead
   */
  subhead?: string | null;
  caseStudies?:
    | {
        caseStudy: string | CaseStudy;
        /**
         * Choose which side to display the metrics vs testimonial
         */
        layout?: ('metricsLeft' | 'metricsRight') | null;
        /**
         * Select up to 4 metrics to display for this case study
         */
        displayMetrics?:
          | {
              metricKey:
                | 'pipelineValue'
                | 'closedRevenue'
                | 'pipelineROI'
                | 'realizedROI'
                | 'relationships'
                | 'bidRequests'
                | 'bidLists'
                | 'repeatClients';
              /**
               * Custom label for this metric (e.g., "Pipeline Generated")
               */
              label: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  backgroundColor?: ('white' | 'offwhite') | null;
  /**
   * Top padding of the section
   */
  paddingTop?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  /**
   * Bottom padding of the section
   */
  paddingBottom?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'caseStudyPreviewBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CaseStudyCarouselBlock".
 */
export interface CaseStudyCarouselBlock {
  /**
   * Section headline
   */
  headline?: string | null;
  /**
   * Section subhead
   */
  subhead?: string | null;
  caseStudies?:
    | {
        caseStudy: string | CaseStudy;
        /**
         * Choose which side to display the metrics vs testimonial
         */
        layout?: ('metricsLeft' | 'metricsRight') | null;
        /**
         * Select up to 4 metrics to display for this case study
         */
        displayMetrics?:
          | {
              metricKey:
                | 'pipelineValue'
                | 'closedRevenue'
                | 'pipelineROI'
                | 'realizedROI'
                | 'relationships'
                | 'bidRequests'
                | 'bidLists'
                | 'repeatClients';
              /**
               * Custom label for this metric (e.g., "Pipeline Generated")
               */
              label: string;
              id?: string | null;
            }[]
          | null;
        id?: string | null;
      }[]
    | null;
  backgroundColor?: ('white' | 'offwhite') | null;
  /**
   * Top padding of the section
   */
  paddingTop?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  /**
   * Bottom padding of the section
   */
  paddingBottom?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'caseStudyCarouselBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ServiceSummaryBlock".
 */
export interface ServiceSummaryBlock {
  service: string | Service;
  displayStyle?: ('card' | 'inline' | 'detailed') | null;
  backgroundColor?: ('white' | 'offwhite') | null;
  /**
   * Top padding of the section
   */
  paddingTop?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  /**
   * Bottom padding of the section
   */
  paddingBottom?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'serviceSummaryBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ServicesCollectionBlock".
 */
export interface ServicesCollectionBlock {
  /**
   * Section headline
   */
  headline?: string | null;
  /**
   * Section subhead
   */
  subhead?: string | null;
  services?:
    | {
        service: string | Service;
        /**
         * Optional image for this service card
         */
        image?: (string | null) | Media;
        id?: string | null;
      }[]
    | null;
  columns?: ('2' | '3' | '4') | null;
  backgroundColor?: ('white' | 'offwhite') | null;
  /**
   * Top padding of the section
   */
  paddingTop?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  /**
   * Bottom padding of the section
   */
  paddingBottom?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'servicesCollectionBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "GalleryBlock".
 */
export interface GalleryBlock {
  images: {
    image: string | Media;
    alt: string;
    /**
     * Optional label displayed below image in monospace style
     */
    label?: string | null;
    labelAlignment?: ('left' | 'right') | null;
    id?: string | null;
  }[];
  /**
   * 4 images only works with full height (creates 2x2 grid)
   */
  height: 'full' | 'half';
  backgroundColor?: ('white' | 'offwhite') | null;
  /**
   * Top padding of the section
   */
  paddingTop?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  /**
   * Bottom padding of the section
   */
  paddingBottom?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'galleryBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageBlock".
 */
export interface ImageBlock {
  image: string | Media;
  alt: string;
  /**
   * Optional label displayed below image in monospace style
   */
  label?: string | null;
  labelAlignment?: ('left' | 'right') | null;
  position: '4-left' | '5-left' | '6-left' | '6-right' | '5-right' | '4-right';
  backgroundColor?: ('white' | 'offwhite') | null;
  /**
   * Top padding of the section
   */
  paddingTop?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  /**
   * Bottom padding of the section
   */
  paddingBottom?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'imageBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SplitBlock".
 */
export interface SplitBlock {
  image: string | Media;
  alt: string;
  /**
   * Optional label displayed below image in monospace style
   */
  label?: string | null;
  labelAlignment?: ('left' | 'right') | null;
  headline: string;
  subhead?: string | null;
  imagePosition: 'left' | 'right';
  backgroundColor?: ('white' | 'offwhite') | null;
  /**
   * Top padding of the section
   */
  paddingTop?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  /**
   * Bottom padding of the section
   */
  paddingBottom?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'splitBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CarouselBlock".
 */
export interface CarouselBlock {
  images: {
    image: string | Media;
    alt: string;
    /**
     * Optional label displayed below image in monospace style
     */
    label?: string | null;
    labelAlignment?: ('left' | 'right') | null;
    id?: string | null;
  }[];
  height: 'full' | 'half';
  backgroundColor?: ('white' | 'offwhite') | null;
  /**
   * Top padding of the section
   */
  paddingTop?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  /**
   * Bottom padding of the section
   */
  paddingBottom?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'carouselBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  headline: string;
  subhead?: string | null;
  links?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  backgroundColor?: ('white' | 'offwhite') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'primary' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  backgroundColor?: ('white' | 'offwhite') | null;
  /**
   * Top padding of the section
   */
  paddingTop?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  /**
   * Bottom padding of the section
   */
  paddingBottom?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: string | Media;
  backgroundColor?: ('white' | 'offwhite') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock".
 */
export interface ArchiveBlock {
  introContent?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  populateBy?: ('collection' | 'selection') | null;
  relationTo?: 'posts' | null;
  categories?: (string | Category)[] | null;
  limit?: number | null;
  selectedDocs?:
    | {
        relationTo: 'posts';
        value: string | Post;
      }[]
    | null;
  backgroundColor?: ('white' | 'offwhite') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'archive';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock".
 */
export interface FormBlock {
  form: string | Form;
  enableIntro?: boolean | null;
  introContent?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  backgroundColor?: ('white' | 'offwhite') | null;
  /**
   * Top padding of the section
   */
  paddingTop?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  /**
   * Bottom padding of the section
   */
  paddingBottom?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'formBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms".
 */
export interface Form {
  id: string;
  title: string;
  fields?:
    | (
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            defaultValue?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'checkbox';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'country';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'email';
          }
        | {
            message?: {
              root: {
                type: string;
                children: {
                  type: any;
                  version: number;
                  [k: string]: unknown;
                }[];
                direction: ('ltr' | 'rtl') | null;
                format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
                indent: number;
                version: number;
              };
              [k: string]: unknown;
            } | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'message';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'number';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            placeholder?: string | null;
            options?:
              | {
                  label: string;
                  value: string;
                  id?: string | null;
                }[]
              | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'select';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'state';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'text';
          }
        | {
            name: string;
            label?: string | null;
            width?: number | null;
            defaultValue?: string | null;
            required?: boolean | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'textarea';
          }
      )[]
    | null;
  submitButtonLabel?: string | null;
  /**
   * Choose whether to display an on-page message or redirect to a different page after they submit the form.
   */
  confirmationType?: ('message' | 'redirect') | null;
  confirmationMessage?: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  redirect?: {
    url: string;
  };
  /**
   * Send custom emails when the form submits. Use comma separated lists to send the same email to multiple recipients. To reference a value from this form, wrap that field's name with double curly brackets, i.e. {{firstName}}. You can use a wildcard {{*}} to output all data and {{*:table}} to format it as an HTML table in the email.
   */
  emails?:
    | {
        emailTo?: string | null;
        cc?: string | null;
        bcc?: string | null;
        replyTo?: string | null;
        emailFrom?: string | null;
        subject: string;
        /**
         * Enter the message that should be sent in this email.
         */
        message?: {
          root: {
            type: string;
            children: {
              type: any;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CalendlyBlock".
 */
export interface CalendlyBlock {
  /**
   * Full Calendly URL (e.g., https://calendly.com/username/meeting)
   */
  calendlyUrl: string;
  backgroundColor?: ('white' | 'offwhite') | null;
  /**
   * Minimum height in pixels
   */
  minHeight?: number | null;
  /**
   * Top padding of the section
   */
  paddingTop?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  /**
   * Bottom padding of the section
   */
  paddingBottom?: ('none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'calendlyBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects".
 */
export interface Redirect {
  id: string;
  /**
   * You will need to rebuild the website when changing this field.
   */
  from: string;
  to?: {
    type?: ('reference' | 'custom') | null;
    reference?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null);
    url?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions".
 */
export interface FormSubmission {
  id: string;
  form: string | Form;
  submissionData?:
    | {
        field: string;
        value: string;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This is a collection of automatically created search results. These results are used by the global site search and will be updated automatically as documents in the CMS are created or updated.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search".
 */
export interface Search {
  id: string;
  title?: string | null;
  priority?: number | null;
  doc: {
    relationTo: 'posts';
    value: string | Post;
  };
  slug?: string | null;
  meta?: {
    title?: string | null;
    description?: string | null;
    image?: (string | null) | Media;
  };
  categories?:
    | {
        relationTo?: string | null;
        categoryID?: string | null;
        title?: string | null;
        id?: string | null;
      }[]
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: string;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: string;
  document?:
    | ({
        relationTo: 'pages';
        value: string | Page;
      } | null)
    | ({
        relationTo: 'posts';
        value: string | Post;
      } | null)
    | ({
        relationTo: 'services';
        value: string | Service;
      } | null)
    | ({
        relationTo: 'case-studies';
        value: string | CaseStudy;
      } | null)
    | ({
        relationTo: 'media';
        value: string | Media;
      } | null)
    | ({
        relationTo: 'categories';
        value: string | Category;
      } | null)
    | ({
        relationTo: 'users';
        value: string | User;
      } | null)
    | ({
        relationTo: 'redirects';
        value: string | Redirect;
      } | null)
    | ({
        relationTo: 'forms';
        value: string | Form;
      } | null)
    | ({
        relationTo: 'form-submissions';
        value: string | FormSubmission;
      } | null)
    | ({
        relationTo: 'search';
        value: string | Search;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: string | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  hero?:
    | T
    | {
        type?: T;
        richText?: T;
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        media?: T;
      };
  layout?:
    | T
    | {
        heroBlock?: T | HeroBlockSelect<T>;
        statsRowBlock?: T | StatsRowBlockSelect<T>;
        testimonialBlock?: T | TestimonialBlockSelect<T>;
        statementBlock?: T | StatementBlockSelect<T>;
        featureGridBlock?: T | FeatureGridBlockSelect<T>;
        processBlock?: T | ProcessBlockSelect<T>;
        logoStripBlock?: T | LogoStripBlockSelect<T>;
        caseStudySummaryBlock?: T | CaseStudySummaryBlockSelect<T>;
        caseStudyPreviewBlock?: T | CaseStudyPreviewBlockSelect<T>;
        caseStudyCarouselBlock?: T | CaseStudyCarouselBlockSelect<T>;
        serviceSummaryBlock?: T | ServiceSummaryBlockSelect<T>;
        servicesCollectionBlock?: T | ServicesCollectionBlockSelect<T>;
        galleryBlock?: T | GalleryBlockSelect<T>;
        imageBlock?: T | ImageBlockSelect<T>;
        splitBlock?: T | SplitBlockSelect<T>;
        carouselBlock?: T | CarouselBlockSelect<T>;
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        calendlyBlock?: T | CalendlyBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  generateSlug?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeroBlock_select".
 */
export interface HeroBlockSelect<T extends boolean = true> {
  variant?: T;
  eyebrow?: T;
  headline?: T;
  subheadline?: T;
  ctaButton?:
    | T
    | {
        label?: T;
        url?: T;
      };
  proofBadge?: T;
  image?: T;
  backgroundImage?: T;
  heroImage?: T;
  services?: T;
  overlayOpacity?: T;
  objectPosition?: T;
  backgroundColor?: T;
  paddingTop?: T;
  paddingBottom?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StatsRowBlock_select".
 */
export interface StatsRowBlockSelect<T extends boolean = true> {
  stats?:
    | T
    | {
        value?: T;
        label?: T;
        id?: T;
      };
  backgroundColor?: T;
  paddingTop?: T;
  paddingBottom?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TestimonialBlock_select".
 */
export interface TestimonialBlockSelect<T extends boolean = true> {
  quote?: T;
  authorName?: T;
  authorTitle?: T;
  companyName?: T;
  authorImage?: T;
  position?: T;
  backgroundColor?: T;
  paddingTop?: T;
  paddingBottom?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "StatementBlock_select".
 */
export interface StatementBlockSelect<T extends boolean = true> {
  headline?: T;
  content?: T;
  alignment?: T;
  ctaButton?:
    | T
    | {
        label?: T;
        url?: T;
      };
  backgroundColor?: T;
  paddingTop?: T;
  paddingBottom?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureGridBlock_select".
 */
export interface FeatureGridBlockSelect<T extends boolean = true> {
  headline?: T;
  subhead?: T;
  features?:
    | T
    | {
        image?: T;
        title?: T;
        description?: T;
        id?: T;
      };
  columns?: T;
  backgroundColor?: T;
  paddingTop?: T;
  paddingBottom?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProcessBlock_select".
 */
export interface ProcessBlockSelect<T extends boolean = true> {
  headline?: T;
  subhead?: T;
  steps?:
    | T
    | {
        number?: T;
        title?: T;
        description?: T;
        id?: T;
      };
  backgroundColor?: T;
  paddingTop?: T;
  paddingBottom?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "LogoStripBlock_select".
 */
export interface LogoStripBlockSelect<T extends boolean = true> {
  headline?: T;
  logos?:
    | T
    | {
        image?: T;
        altText?: T;
        id?: T;
      };
  backgroundColor?: T;
  paddingTop?: T;
  paddingBottom?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CaseStudySummaryBlock_select".
 */
export interface CaseStudySummaryBlockSelect<T extends boolean = true> {
  caseStudy?: T;
  displayMetrics?:
    | T
    | {
        label?: T;
        value?: T;
        id?: T;
      };
  backgroundColor?: T;
  paddingTop?: T;
  paddingBottom?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CaseStudyPreviewBlock_select".
 */
export interface CaseStudyPreviewBlockSelect<T extends boolean = true> {
  headline?: T;
  subhead?: T;
  caseStudies?:
    | T
    | {
        caseStudy?: T;
        layout?: T;
        displayMetrics?:
          | T
          | {
              metricKey?: T;
              label?: T;
              id?: T;
            };
        id?: T;
      };
  backgroundColor?: T;
  paddingTop?: T;
  paddingBottom?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CaseStudyCarouselBlock_select".
 */
export interface CaseStudyCarouselBlockSelect<T extends boolean = true> {
  headline?: T;
  subhead?: T;
  caseStudies?:
    | T
    | {
        caseStudy?: T;
        layout?: T;
        displayMetrics?:
          | T
          | {
              metricKey?: T;
              label?: T;
              id?: T;
            };
        id?: T;
      };
  backgroundColor?: T;
  paddingTop?: T;
  paddingBottom?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ServiceSummaryBlock_select".
 */
export interface ServiceSummaryBlockSelect<T extends boolean = true> {
  service?: T;
  displayStyle?: T;
  backgroundColor?: T;
  paddingTop?: T;
  paddingBottom?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ServicesCollectionBlock_select".
 */
export interface ServicesCollectionBlockSelect<T extends boolean = true> {
  headline?: T;
  subhead?: T;
  services?:
    | T
    | {
        service?: T;
        image?: T;
        id?: T;
      };
  columns?: T;
  backgroundColor?: T;
  paddingTop?: T;
  paddingBottom?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "GalleryBlock_select".
 */
export interface GalleryBlockSelect<T extends boolean = true> {
  images?:
    | T
    | {
        image?: T;
        alt?: T;
        label?: T;
        labelAlignment?: T;
        id?: T;
      };
  height?: T;
  backgroundColor?: T;
  paddingTop?: T;
  paddingBottom?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ImageBlock_select".
 */
export interface ImageBlockSelect<T extends boolean = true> {
  image?: T;
  alt?: T;
  label?: T;
  labelAlignment?: T;
  position?: T;
  backgroundColor?: T;
  paddingTop?: T;
  paddingBottom?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "SplitBlock_select".
 */
export interface SplitBlockSelect<T extends boolean = true> {
  image?: T;
  alt?: T;
  label?: T;
  labelAlignment?: T;
  headline?: T;
  subhead?: T;
  imagePosition?: T;
  backgroundColor?: T;
  paddingTop?: T;
  paddingBottom?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CarouselBlock_select".
 */
export interface CarouselBlockSelect<T extends boolean = true> {
  images?:
    | T
    | {
        image?: T;
        alt?: T;
        label?: T;
        labelAlignment?: T;
        id?: T;
      };
  height?: T;
  backgroundColor?: T;
  paddingTop?: T;
  paddingBottom?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  headline?: T;
  subhead?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  backgroundColor?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  backgroundColor?: T;
  paddingTop?: T;
  paddingBottom?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  backgroundColor?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ArchiveBlock_select".
 */
export interface ArchiveBlockSelect<T extends boolean = true> {
  introContent?: T;
  populateBy?: T;
  relationTo?: T;
  categories?: T;
  limit?: T;
  selectedDocs?: T;
  backgroundColor?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FormBlock_select".
 */
export interface FormBlockSelect<T extends boolean = true> {
  form?: T;
  enableIntro?: T;
  introContent?: T;
  backgroundColor?: T;
  paddingTop?: T;
  paddingBottom?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CalendlyBlock_select".
 */
export interface CalendlyBlockSelect<T extends boolean = true> {
  calendlyUrl?: T;
  backgroundColor?: T;
  minHeight?: T;
  paddingTop?: T;
  paddingBottom?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "posts_select".
 */
export interface PostsSelect<T extends boolean = true> {
  title?: T;
  heroImage?: T;
  content?: T;
  relatedPosts?: T;
  categories?: T;
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  authors?: T;
  populatedAuthors?:
    | T
    | {
        id?: T;
        name?: T;
      };
  generateSlug?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "services_select".
 */
export interface ServicesSelect<T extends boolean = true> {
  title?: T;
  category?: T;
  excerpt?: T;
  icon?: T;
  featuredMetrics?:
    | T
    | {
        label?: T;
        value?: T;
        id?: T;
      };
  benefits?:
    | T
    | {
        text?: T;
        id?: T;
      };
  content?:
    | T
    | {
        heroBlock?: T | HeroBlockSelect<T>;
        statementBlock?: T | StatementBlockSelect<T>;
        statsRowBlock?: T | StatsRowBlockSelect<T>;
        testimonialBlock?: T | TestimonialBlockSelect<T>;
        featureGridBlock?: T | FeatureGridBlockSelect<T>;
        processBlock?: T | ProcessBlockSelect<T>;
        logoStripBlock?: T | LogoStripBlockSelect<T>;
        caseStudySummaryBlock?: T | CaseStudySummaryBlockSelect<T>;
        caseStudyPreviewBlock?: T | CaseStudyPreviewBlockSelect<T>;
        caseStudyCarouselBlock?: T | CaseStudyCarouselBlockSelect<T>;
        serviceSummaryBlock?: T | ServiceSummaryBlockSelect<T>;
        servicesCollectionBlock?: T | ServicesCollectionBlockSelect<T>;
        galleryBlock?: T | GalleryBlockSelect<T>;
        imageBlock?: T | ImageBlockSelect<T>;
        splitBlock?: T | SplitBlockSelect<T>;
        carouselBlock?: T | CarouselBlockSelect<T>;
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        calendlyBlock?: T | CalendlyBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  generateSlug?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "case-studies_select".
 */
export interface CaseStudiesSelect<T extends boolean = true> {
  clientName?: T;
  headline?: T;
  subheadline?: T;
  industry?: T;
  campaignDuration?: T;
  investment?: T;
  keyMetrics?:
    | T
    | {
        pipelineValue?: T;
        closedRevenue?: T;
        pipelineROI?: T;
        realizedROI?: T;
        relationships?: T;
        bidRequests?: T;
        bidLists?: T;
        repeatClients?: T;
      };
  testimonial?:
    | T
    | {
        quote?: T;
        authorName?: T;
        authorTitle?: T;
        authorImage?: T;
        logo?: T;
      };
  services?: T;
  content?:
    | T
    | {
        heroBlock?: T | HeroBlockSelect<T>;
        statementBlock?: T | StatementBlockSelect<T>;
        statsRowBlock?: T | StatsRowBlockSelect<T>;
        testimonialBlock?: T | TestimonialBlockSelect<T>;
        featureGridBlock?: T | FeatureGridBlockSelect<T>;
        processBlock?: T | ProcessBlockSelect<T>;
        logoStripBlock?: T | LogoStripBlockSelect<T>;
        caseStudySummaryBlock?: T | CaseStudySummaryBlockSelect<T>;
        caseStudyPreviewBlock?: T | CaseStudyPreviewBlockSelect<T>;
        caseStudyCarouselBlock?: T | CaseStudyCarouselBlockSelect<T>;
        serviceSummaryBlock?: T | ServiceSummaryBlockSelect<T>;
        servicesCollectionBlock?: T | ServicesCollectionBlockSelect<T>;
        galleryBlock?: T | GalleryBlockSelect<T>;
        imageBlock?: T | ImageBlockSelect<T>;
        splitBlock?: T | SplitBlockSelect<T>;
        carouselBlock?: T | CarouselBlockSelect<T>;
        cta?: T | CallToActionBlockSelect<T>;
        content?: T | ContentBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
        archive?: T | ArchiveBlockSelect<T>;
        formBlock?: T | FormBlockSelect<T>;
        calendlyBlock?: T | CalendlyBlockSelect<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  generateSlug?: T;
  slug?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  caption?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
  sizes?:
    | T
    | {
        thumbnail?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        square?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        small?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        medium?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        large?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        xlarge?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
        og?:
          | T
          | {
              url?: T;
              width?: T;
              height?: T;
              mimeType?: T;
              filesize?: T;
              filename?: T;
            };
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "categories_select".
 */
export interface CategoriesSelect<T extends boolean = true> {
  title?: T;
  generateSlug?: T;
  slug?: T;
  parent?: T;
  breadcrumbs?:
    | T
    | {
        doc?: T;
        url?: T;
        label?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  name?: T;
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
  sessions?:
    | T
    | {
        id?: T;
        createdAt?: T;
        expiresAt?: T;
      };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "redirects_select".
 */
export interface RedirectsSelect<T extends boolean = true> {
  from?: T;
  to?:
    | T
    | {
        type?: T;
        reference?: T;
        url?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "forms_select".
 */
export interface FormsSelect<T extends boolean = true> {
  title?: T;
  fields?:
    | T
    | {
        checkbox?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              defaultValue?: T;
              id?: T;
              blockName?: T;
            };
        country?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        email?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        message?:
          | T
          | {
              message?: T;
              id?: T;
              blockName?: T;
            };
        number?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        select?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              placeholder?: T;
              options?:
                | T
                | {
                    label?: T;
                    value?: T;
                    id?: T;
                  };
              required?: T;
              id?: T;
              blockName?: T;
            };
        state?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        text?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
        textarea?:
          | T
          | {
              name?: T;
              label?: T;
              width?: T;
              defaultValue?: T;
              required?: T;
              id?: T;
              blockName?: T;
            };
      };
  submitButtonLabel?: T;
  confirmationType?: T;
  confirmationMessage?: T;
  redirect?:
    | T
    | {
        url?: T;
      };
  emails?:
    | T
    | {
        emailTo?: T;
        cc?: T;
        bcc?: T;
        replyTo?: T;
        emailFrom?: T;
        subject?: T;
        message?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "form-submissions_select".
 */
export interface FormSubmissionsSelect<T extends boolean = true> {
  form?: T;
  submissionData?:
    | T
    | {
        field?: T;
        value?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "search_select".
 */
export interface SearchSelect<T extends boolean = true> {
  title?: T;
  priority?: T;
  doc?: T;
  slug?: T;
  meta?:
    | T
    | {
        title?: T;
        description?: T;
        image?: T;
      };
  categories?:
    | T
    | {
        relationTo?: T;
        categoryID?: T;
        title?: T;
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: string;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'primary' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: string;
  navItems?:
    | {
        link: {
          type?: ('reference' | 'custom') | null;
          newTab?: boolean | null;
          reference?:
            | ({
                relationTo: 'pages';
                value: string | Page;
              } | null)
            | ({
                relationTo: 'posts';
                value: string | Post;
              } | null);
          url?: string | null;
          label: string;
        };
        id?: string | null;
      }[]
    | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  navItems?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: string | Page;
        } | null)
      | ({
          relationTo: 'posts';
          value: string | Post;
        } | null)
      | ({
          relationTo: 'services';
          value: string | Service;
        } | null)
      | ({
          relationTo: 'case-studies';
          value: string | CaseStudy;
        } | null);
    global?: string | null;
    user?: (string | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: any;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  backgroundColor?: ('white' | 'offwhite') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CodeBlock".
 */
export interface CodeBlock {
  language?: ('typescript' | 'javascript' | 'css') | null;
  code: string;
  backgroundColor?: ('white' | 'offwhite') | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'code';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}